#!/usr/bin/env ruby

# This is a helper script to build the /etc/openldap/slapd.access file from the
# concat build output in <%= scope.lookupvar("openldap::server::access::fragdir") %>.

@fragments = { }

infile = File.open(ARGV.first,'r')
outfile = File.open("#{ARGV.first}.out",'w')

what = nil
comment = nil
who = nil
access = nil
control = nil
content = nil

i = 0
infile.each_line do |line|
  i = i+1

  if line =~ /^---$/ then
    if not what.nil? then
      if not @fragments[what] then
        @fragments[what] = {
          :comments => [],
          :entries => [],
          :order => i
        }
      end

      comment and @fragments[what][:comments] << comment

      if content then
        entry = content
      else
        entry = "by #{who}"
        access and entry << " #{access}"
        control and entry << " #{control}"
      end

      @fragments[what][:entries] << entry
    end
    what = nil
    comment = nil
    who = nil
    access = nil
    control = nil
    content = nil
    next
  end

  if line =~ /^What: (.*)$/ then
    what = $1
    next
  end

  if line =~ /^Who: (.*)$/ then
    who = $1
    next
  end

  if line =~ /^Access: (.*)$/ then
    access = $1
    next
  end

  if line =~ /^Control: (.*)$/ then
    control = $1
    next
  end

  if line =~ /^Content: (.*)$/ then
    content = "\t" + $1.gsub("\t","\n        ")
  end
end

infile.close

outfile.puts("# This file managed by Puppet\n# Changes to this file will be overwritten by the next Puppet run.\n")

@fragments.sort{ |a,b| a[1][:order] <=> b[1][:order] }.each do |entry|
  entry[1][:comments].each do |comment|
    if not comment[0].chr.eql?('#') then
      outfile.print("# ")
    end
    outfile.puts(comment)
  end

  outfile.puts "access to #{entry[0]} "

  entry[1][:entries].each do |line|
    outfile.puts "        #{line.strip}"
  end
end

outfile.close
